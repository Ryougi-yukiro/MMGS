df <- df[!is.na(df$Trait),];
if(nrow(df) >= filter_num) {
#abline(lm(Trait ~ meanY, data = df), col = "gray80");
#points(df$meanY, df$Trait, col = gray_alpha,  pch = 19, cex = .3)
}
}
return(df)
}
df
Regression<-function(LbyE,env_trait,filter_num=NULL){
if(is.null(filter_num)){
filter_num= 4
}
data<-data.frame()
for (i in 1:nrow(LbyE)) {
df <- data.frame(meanY = env_trait$mean, Trait = as.numeric(LbyE[i, -1]));
df <- df[!is.na(df$Trait),];
if(nrow(df) >= filter_num) {
}
}
return(df)
}
Regression(LbyE=LbyE,env_trait=env_trait)
Regression<-function(LbyE,env_trait,filter_num=NULL){
if(is.null(filter_num)){
filter_num= 4
}
data<-data.frame()
for (i in 1:nrow(LbyE)) {
df <- data.frame(meanY = env_trait$mean, Trait = as.numeric(LbyE[i, -1]));
df <- df[!is.na(df$Trait),];
if(nrow(df) >= filter_num) {
df$line<-LbyE[i,1]
data<-rbind(data,df)
}
}
return(data)
}
Regression(LbyE=LbyE,env_trait=env_trait)
usethis::use_package('ggplot2',type="Depends")
usethis::use_package('dplyr')
usethis::use_package('RColorBrewer')
usethis::use_package('data.table')
usethis::use_package('corrgram')
usethis::use_package('colorspace')
usethis::use_package('rrBLUP')
usethis::use_package('BGLR')
usethis::use_package('yarrr')
usethis::use_package('BWGS')
trait<-read.table(file="E:/10.devR/Trait_records.txt",header=T)
env_info<-read.table(file="E:/10.devR/Env_meta_table.txt",header=T)
env_trait<-env_trait_calculate(data=trait,trait="FTgdd",env="env_code")
LbyE<-LbyE_calculate(data=trait,trait="FTgdd",env="env_code",line="line_code")
LbyE_corrplot(LbyE=LbyE)
etl<-etl_calculate(data=env_info,trait="FTgdd",env="env_code",bycol="lat")
etl_plotter(data=etl,mean=env_trait)
line_trait_mean<-line_trait_mean(mean=env_trait,LbyE=LbyE,row=2)
#ltm_plotter想不到怎么修改比较合适
ltm_plotter(data=line_trait_mean,mean=env_trait)
Reg<-Reg(LbyE=LbyE,env_trait=env_trait)
#' Regression
#'
#' @param LbyE
#' @param env_trait
#' @param filter_num
#'
#' @return
#' @export
#'
#' @examples Reg(LbyE=LbyE,env_trait=env_trait)
Reg<-function(LbyE,env_trait,filter_num=NULL){
if(is.null(filter_num)){
filter_num= 4
}
data<-data.frame()
for (i in 1:nrow(LbyE)) {
df <- data.frame(meanY = env_trait$mean, Trait = as.numeric(LbyE[i, -1]));
df <- df[!is.na(df$Trait),];
if(nrow(df) >= filter_num) {
df$line<-LbyE[i,1]
data<-rbind(data,df)
}
}
return(data)
}
Reg<-Reg(LbyE=LbyE,env_trait=env_trait)
View(Reg)
ggplot(Reg, aes(x = meanY, y = Trait, group = line))+geom_point() +
geom_smooth(method = "lm", se = FALSE) +labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line))+geom_point() +
geom_smooth(method = "lm", se = FALSE,color="gray90") +labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line),color="gray90")+geom_point() +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line))+geom_point(color="gray90",size=1) +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line))+geom_point(color="gray50",size=1) +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +
geom_point(color="gray50",size=1)labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +
geom_point(color="gray50",size=1)+labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +
geom_point(color="gray50",size=1，alpha=0.5)+labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +
geom_point(color="gray50",size=1,alpha=0.5)+labs(x = "meanY", y = "Trait")
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = "lm", se = FALSE,color="gray90",alpha=0.1) +
geom_point(color="gray50",size=1,alpha=0.5)+labs(x = "mean", y = "Trait")
?method
?geom_smooth
Reg_plotter<-function(Reg=Reg,size=NULL,method=NULL,color=NULL,alpha=NULL){
if(is.null(size)){
size= 1
}
if(is.null(method)){
method= "lm"
}
if(is.null(color)){
color= c("gray90","gray50")
}
if(is.null(alpha)){
alpha= c(0.1,0.5)
}
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = method, se = FALSE,color=color[1],alpha=0.1) +
geom_point(color=color[2],size=size,alpha=0.5)+labs(x = "mean", y = "Trait") +theme_bw()
}
Reg_plotter<-function(Reg=Reg,size=NULL,method=NULL,color=NULL,alpha=NULL){
if(is.null(size)){
size= 1
}
if(is.null(method)){
method= "lm"
}
if(is.null(color)){
color= c("gray90","gray50")
}
if(is.null(alpha)){
alpha= c(0.1,0.5)
}
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = method, se = FALSE,color=color[1],alpha=alpha[1]) +
geom_point(color=color[2],size=size,alpha=0.5)+labs(x = "mean", y = "Trait") +theme_bw()
}
Reg_plotter(Reg=Reg)
Reg_plotter<-function(Reg=Reg,size=NULL,method=NULL,color=NULL,alpha=NULL){
if(is.null(size)){
size= 1
}
if(is.null(method)){
method= "lm"
}
if(is.null(color)){
color= c("gray90","gray50")
}
if(is.null(alpha)){
alpha= c(0.1,0.5)
}
ggplot(Reg, aes(x = meanY, y = Trait, group = line)) +
geom_smooth(method = method, se = FALSE,color=color[1],alpha=alpha[1]) +
geom_point(color=color[2],size=size,alpha=alpha[2])+labs(x = "mean", y = "Trait") +theme_bw()
}
Reg_plotter(Reg=Reg)
Reg_plotter(Reg=Reg,color=c("red","blue"))
Reg_plotter(Reg=Reg)
source("E:/10.devR/ggGSE/R/Reg_plotter.R", echo=TRUE)
library(ggGSE)
library(ggGSE)
trait<-read.table(file="E:/10.devR/Trait_records.txt",header=T)
env_info<-read.table(file="E:/10.devR/Env_meta_table.txt",header=T)
env_trait<-env_trait_calculate(data=trait,trait="FTgdd",env="env_code")
LbyE<-LbyE_calculate(data=trait,trait="FTgdd",env="env_code",line="line_code")
LbyE_corrplot(LbyE=LbyE)
etl<-etl_calculate(data=env_info,trait="FTgdd",env="env_code",bycol="lat")
etl_plotter(data=etl,mean=env_trait)
Reg<-Reg(LbyE=LbyE,env_trait=env_trait)
Reg_plotter(Reg=Reg)
lm<-function(data,mean,env,line){
lines <- unique(as.vector(data[[line]]));
envs <- unique(as.vector(data[[env]]));
lm_residuals <- data.frame(env_code = envs);
for (l in lines) {
line_trait_0 <- subset(data, data[[line]] == l & !is.na(data[[trait]] ));
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
}
df2 <- data.frame(env_code = lm_residuals[,1], errors = rowMeans(lm_residuals[,-1], na.rm = T));
df2 <- merge(df2, env_trait);
}
lm(data=trait,trait="FTgdd",env="env_code",line="line_code")
lm<-function(data,trait,env,line){
lines <- unique(as.vector(data[[line]]));
envs <- unique(as.vector(data[[env]]));
lm_residuals <- data.frame(env_code = envs);
for (l in lines) {
line_trait_0 <- subset(data, data[[line]] == l & !is.na(data[[trait]] ));
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
}
df2 <- data.frame(env_code = lm_residuals[,1], errors = rowMeans(lm_residuals[,-1], na.rm = T));
df2 <- merge(df2, env_trait);
}
lm(data=trait,trait="FTgdd",env="env_code",line="line_code")
lm_residuals <- data.frame(env_code = envs);
envs <- unique(as.vector(data[["env_code"]]));
lines <- unique(as.vector(data[[line]]));
trait="FTgdd",env="env_code",line="line_code"
trait="FTgdd"
env="env_code"
"line_code"
line="line_code"
source("~/.active-rstudio-document", echo=TRUE)
lines <- unique(as.vector(data[[line]]));
data=trait
lines <- unique(as.vector(data[[line]]));
lines
envs <- unique(as.vector(data[["env_code"]]));
envs
lm_residuals <- data.frame(env_code = envs);
lm_residuals
for (l in lines) {
line_trait_0 <- subset(data, data[[line]] == l & !is.na(data[[trait]] ));
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
}
line_trait_0 <- subset(data, data[[line]] == "E5" & !is.na(data[[trait]] ));
data[[line]]
line_trait_0 <- subset(trait, trait$line_code == l & !is.na(trait$FTgdd));
trait$line_code
line_trait_0 <- subset(data, data[[line]] == "E5" & !is.na(data[[trait]] ));
data<-trait
line_trait_0 <- subset(data, data[[line]] == "E5" & !is.na(data[["Ftgdd"]] ));
line_trait_0
line_trait_0 <- subset(trait, trait$line_code == l & !is.na(trait$FTgdd));
line_trait_0
lm<-function(data,trait,env,line){
lines <- unique(as.vector(data[[line]]));
envs <- unique(as.vector(data[[env]]));
lm_residuals <- data.frame(env_code = envs);
for (l in lines) {
line_trait_0 <- subset(data, data[[line]] == "E5" & !is.na(data[[trait]] ));
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
}
df2 <- data.frame(env_code = lm_residuals[,1], errors = rowMeans(lm_residuals[,-1], na.rm = T));
df2 <- merge(df2, env_trait);
}
line_trait_0 <- subset(trait, trait$line_code == l & !is.na(trait$FTgdd));
lm(data=trait,trait="FTgdd",env="env_code",line="line_code")
lm<-function(data,trait,env,line){
lines <- unique(as.vector(data[[line]]));
envs <- unique(as.vector(data[[env]]));
lm_residuals <- data.frame(env_code = envs);
for (l in lines) {
line_trait_0 <- subset(data, lines == l & !is.na(data[[trait]] ));
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
}
df2 <- data.frame(env_code = lm_residuals[,1], errors = rowMeans(lm_residuals[,-1], na.rm = T));
df2 <- merge(df2, env_trait);
}
lm(data=trait,trait="FTgdd",env="env_code",line="line_code")
lines
line_trait_0 <- subset(trait, lines == l & !is.na(data[[trait]]));
line_trait_0 <- subset(trait, trait$line_code == l & !is.na(data[[trait]]));
line_trait_0 <- subset(trait, trait$env_code == l & !is.na(data[[trait]]));
lines
line_trait_0 <- subset(trait, lines == "E96" & !is.na(data[[trait]]));
line_trait_0 <- subset(trait, lines == "E96" & !is.na(trait[["FTgdd"]]));
line_trait_0
lm<-function(data,trait,env,line){
lines <- unique(as.vector(data[[line]]));
envs <- unique(as.vector(data[[env]]));
lm_residuals <- data.frame(env_code = envs);
for (l in lines) {
line_trait_0 <- subset(data, lines == l & !is.na(data[[trait]]));
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
}
df2 <- data.frame(env_code = lm_residuals[,1], errors = rowMeans(lm_residuals[,-1], na.rm = T));
df2 <- merge(df2, env_trait);
}
lm(data=trait,trait="FTgdd",env="",line="line_code")
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
line_trait_0
View(trait)
lm<-function(data,mean,trait,env,line){
lines <- unique(as.vector(data[[line]]));
envs <- unique(as.vector(data[[env]]));
lm_residuals <- data.frame(env_code = envs);
for (l in lines) {
line_trait_0 <- subset(data, lines == l & !is.na(data[[trait]]));
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
}
df2 <- data.frame(env_code = lm_residuals[,1], errors = rowMeans(lm_residuals[,-1], na.rm = T));
df2 <- merge(df2, env_trait);
}
lm(data=trait,mean=env_trait,trait="FTgdd",env="",line="line_code")
if (nrow(line_trait_0) > 0) {
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
df1 <- data.frame(env_code = line_trait_0$env_code, line_code = round((line_lm$residuals)^2, 3));
colnames(df1)[2] <- l;
lm_residuals <- merge(lm_residuals, df1, all.x = T)
}
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
line_trait_0
line_trait_0 <- subset(data, lines == l & !is.na(data[[trait]]));
source("~/.active-rstudio-document", echo=TRUE)
line_trait_0 <- subset(data, lines == "E3" & !is.na(data[[trait]]));
line_trait_0 <- subset(trait, lines == "E3" & !is.na(data[["FTgdd"]]));
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_lm <- lm(line_trait_0$trait ~ line_trait_0$mean);
head(line_trait_0 )
env_trait
line_trait_0 <- subset(data, lines == "E3" & !is.na(data[[trait]]));
line_trait_0 <- subset(trait, lines == "E3" & !is.na(data[["FTgdd"]]));
line_trait_0
line_trait_0 <- subset(trait, lines == "E97" & !is.na(data[["FTgdd"]]));
line_trait_0
line_trait_0 <-  merge(env_trait, line_trait_0[,c(2,3)])
line_trait_0
line_trait_0 <- subset(trait, lines == "E97" & !is.na(data[["FTgdd"]]));
line_trait_0
line_trait_0 <-  merge(env_trait, line_trait_0[,c(match(data, colnames("line_code")),
match(data, colnames("FTgdd")))])
line_trait_0 <-  merge(env_trait, line_trait_0[,c(match(trait, colnames("line_code")),
match(trait, colnames("FTgdd")))])
line_trait_0 <-  merge(env_trait, line_trait_0[,c(3,
match(trait, colnames("FTgdd")))])
line_trait_0 <-  merge(env_trait, line_trait_0[,c(3,
match("FTgdd", colnames(trait)))])
line_trait_0
line_lm <- lm(line_trait_0[["FTgdd"]] ~ line_trait_0$mean);
trait<-read.table(file="E:/10.devR/Trait_records.txt",header=T)
env_info<-read.table(file="E:/10.devR/Env_meta_table.txt",header=T)
library(ggGSE)
LbyE<-LbyE_calculate(data=trait,trait="FTgdd",env="env_code",line="line_code")
env_trait<-env_trait_calculate(data=trait,trait="FTgdd",env="env_code")
Reg<-Reg(LbyE=LbyE,env_trait=env_trait)
View(Reg)
Paras <- c('DL', 'GDD', 'PTT', 'PTR', 'PTS');
nParas
#这个参数是是啥意思啊？为什么是122
searching_daps <- 122;
Paras <- c('DL', 'GDD', 'PTT', 'PTR', 'PTS');
nParas <- length(Paras);
dap_win <- searching_daps * searching_daps  / 2;
pop_cors_matrix <- matrix(ncol = 4 + (2 * nParas), nrow = dap_win * 1);
colnames(pop_cors_matrix) <- c("pop_code", 'Day_x', 'Day_y', 'window',
paste('R_', Paras, sep = ''), paste('nR_', Paras, sep = ''));
View(pop_cors_matrix)
n <- 0;
for (d1 in 1:(dap_y - 6)) {
for (d2 in (d1 + 6):dap_y) {
days <- c(d1:d2);
env_facts_matrix <- matrix(nrow = nrow(env_mean_trait), ncol = nParas);
for (e_i in 1:nrow(env_mean_trait)) {
e <- env_mean_trait$env_code[e_i];
env_para <- subset(env_paras, env_paras$env_code == e);
env_mean <- colMeans(env_para[days, (1:nParas) + 4]); ### DL, GDD, DTR, PTT, PTR, PTD, PTD2, PTS
env_facts_matrix[e_i,] <- env_mean;
}
n <- n + 1;
### leave one environment out and get the median correlation
Ymean_envPara <- cbind(env_facts_matrix, env_mean_trait$meanY);
rs <- c();
if (LOO == 0) {
for (k in 1:nParas) {
rs[k] <- round(cor(Ymean_envPara[,nParas + 1], Ymean_envPara[,k]), digits = 4)
#           rs[k] <- round(-log(cor.test(Ymean_envPara[,8], Ymean_envPara[,k])$p.value, 10), digits = 4)
}
} else {
loo_rs_matrix <- matrix(nrow = nrow(Ymean_envPara)+ 0, ncol = nParas);
for (k in 1:nParas) { ## 8 environment parameters
for (e_x in c(1:nrow(Ymean_envPara))) {
t_matrix <- Ymean_envPara[-e_x,];
loo_rs_matrix[e_x, k] <- round(cor(t_matrix[,nParas + 1], t_matrix[,k]), digits = 4)
}
}
rs <- apply(loo_rs_matrix, 2, median);
}
pop_cors_matrix[n, ] <- c(p, d1, d2, d2 - d1, rs, 0 - rs);
}
}
dap_y<-searching_daps
dap_x<-searching_daps
for (d1 in 1:(dap_y - 6)) {
for (d2 in (d1 + 6):dap_y) {
days <- c(d1:d2);
env_facts_matrix <- matrix(nrow = nrow(env_mean_trait), ncol = nParas);
for (e_i in 1:nrow(env_mean_trait)) {
e <- env_mean_trait$env_code[e_i];
env_para <- subset(env_paras, env_paras$env_code == e);
env_mean <- colMeans(env_para[days, (1:nParas) + 4]); ### DL, GDD, DTR, PTT, PTR, PTD, PTD2, PTS
env_facts_matrix[e_i,] <- env_mean;
}
n <- n + 1;
### leave one environment out and get the median correlation
Ymean_envPara <- cbind(env_facts_matrix, env_mean_trait$meanY);
rs <- c();
if (LOO == 0) {
for (k in 1:nParas) {
rs[k] <- round(cor(Ymean_envPara[,nParas + 1], Ymean_envPara[,k]), digits = 4)
#           rs[k] <- round(-log(cor.test(Ymean_envPara[,8], Ymean_envPara[,k])$p.value, 10), digits = 4)
}
} else {
loo_rs_matrix <- matrix(nrow = nrow(Ymean_envPara)+ 0, ncol = nParas);
for (k in 1:nParas) { ## 8 environment parameters
for (e_x in c(1:nrow(Ymean_envPara))) {
t_matrix <- Ymean_envPara[-e_x,];
loo_rs_matrix[e_x, k] <- round(cor(t_matrix[,nParas + 1], t_matrix[,k]), digits = 4)
}
}
rs <- apply(loo_rs_matrix, 2, median);
}
pop_cors_matrix[n, ] <- c(p, d1, d2, d2 - d1, rs, 0 - rs);
}
}
n <- 0;
dap_y<-searching_daps
dap_x<-searching_daps
for (d1 in 1:(dap_y - 6)) {
for (d2 in (d1 + 6):dap_y) {
days <- c(d1:d2);
env_facts_matrix <- matrix(nrow = nrow(env_trait), ncol = nParas);
for (e_i in 1:nrow(env_trait)) {
e <- env_trait$env_code[e_i];
env_para <- subset(env_paras, env_paras$env_code == e);
env_mean <- colMeans(env_para[days, (1:nParas) + 4]); ### DL, GDD, DTR, PTT, PTR, PTD, PTD2, PTS
env_facts_matrix[e_i,] <- env_mean;
}
n <- n + 1;
### leave one environment out and get the median correlation
Ymean_envPara <- cbind(env_facts_matrix, env_trait$meanY);
rs <- c();
if (LOO == 0) {
for (k in 1:nParas) {
rs[k] <- round(cor(Ymean_envPara[,nParas + 1], Ymean_envPara[,k]), digits = 4)
#           rs[k] <- round(-log(cor.test(Ymean_envPara[,8], Ymean_envPara[,k])$p.value, 10), digits = 4)
}
} else {
loo_rs_matrix <- matrix(nrow = nrow(Ymean_envPara)+ 0, ncol = nParas);
for (k in 1:nParas) { ## 8 environment parameters
for (e_x in c(1:nrow(Ymean_envPara))) {
t_matrix <- Ymean_envPara[-e_x,];
loo_rs_matrix[e_x, k] <- round(cor(t_matrix[,nParas + 1], t_matrix[,k]), digits = 4)
}
}
rs <- apply(loo_rs_matrix, 2, median);
}
pop_cors_matrix[n, ] <- c(p, d1, d2, d2 - d1, rs, 0 - rs);
}
}
PTT_PTR
PTT_PTR <- read.table(file="E:/10.devR/7Envs_envParas_DAP122.txt", header = T , sep = "\t");
dim(PTT_PTR)
View(PTT_PTR)
#读入数据
trait<-read.table(file="E:/10.devR/Trait_records.txt",header=T)
env_info<-read.table(file="E:/10.devR/Env_meta_table.txt",header=T)
PTT_PTR <- read.table(file="E:/10.devR/7Envs_envParas_DAP122.txt", header = T , sep = "\t");
zanding <- read.table(file="E:/10.devR/Genotype.txt", header = T , sep = "\t");
View(PTT_PTR)
?Reg_plotter()
