#卸除所有已经安装的包
detachAllPackages <- function() {

  basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")

  package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]

  package.list <- setdiff(package.list,basic.packages)

  if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)

}
detachAllPackages()
library(devtools)
usethis::use_package('ggplot2',type="Depends")
usethis::use_package('dplyr')
usethis::use_package('corrgram')
usethis::use_package('rrBLUP')
usethis::use_package('BGLR')
usethis::use_package('e1071')
usethis::use_package('glmnet')
usethis::use_package('lemon')
usethis::use_package('lightgbm')
usethis::use_package("RColorBrewer", type = "Remove")
usethis::use_package("colorspace", type = "Remove")
usethis::remove.packages("ggplot2")
###Test区
library(MMGS)
#读入数据
data(trait)
data(geno)
data(env_info)
data("PTT_PTR")
#数据计算
env_trait<-env_trait_calculate(data=trait,trait="FTgdd",env="env_code")
LbyE<-LbyE_calculate(data=trait,trait="FTgdd",env="env_code",line="line_code")
LbyE_corrplot(LbyE=LbyE,cor_type="heatmap")
Paras <- c('DL', 'GDD', 'PTT', 'PTR', 'PTS')
envMeanPara<-envMeanPara(data=env_trait, env_paras=PTT_PTR, maxR_dap1=18,
                         maxR_dap2=43, Paras=Paras)
pheno<-LbyE[which(as.character(LbyE$line_code)%in%c("line_code",as.character(geno$line_code))),]

#进行预测
pheno[1:10,]<-NA
models<-c("rrBLUP","RR","EN","LASSO","GBM","SVM","GBLUP","BA","RKHS","RF")
for(i in models){
out<-MMGP(pheno=pheno, geno=geno, env=env_info,
          para=envMeanPara, Para_Name="PTT", depend="Norm",
          model="rrBLUP", fold=2, reshuffle=1, methods="RM.G")
print (i)
}
#head(out[[1]])
out[[2]]
mean(out[[2]])
out[[3]]
#自定义绘图
R2<-as.data.frame(R2="R2",value=out[[3]])
ggplot(R2,aes(x=R2, y=value))
plot(x=out[[2]]$P)

#NA随机赋予
pheno<-LbyE[which(as.character(LbyE$line_code)%in%c("line_code",as.character(geno$line_code))),]
set.seed(123)
num_nas <- 5
random_rows <- sample(dim(pheno)[1], num_nas)
random_cols <- sample(dim(pheno)[2], num_nas)
pheno[c(12,19,28,76,87),2] <- NA
pheno[c(12,19,26,74,89),3] <- NA
#N环境赋予NA
pheno$PR12<-NA
y <- pheno
ys <- y[order(factor(y$line_code, levels = geno[,1])), ]
yl <- ys %>%tidyr::pivot_longer(cols = -line_code,
                                names_to = "Envs",
                                values_to = "Obs")
yl<-as.data.frame(yl)
y<-yl[order(yl[,2]),]
yNa<-na.omit(y)

models<-c("rrBLUP","RR","EN","LASSO","GBM","SVM","BA","RKHS","RF")
for(i in models){
out<-MMPrdM(pheno=pheno, geno=geno,
            env=env_info,para=envMeanPara,
            Para_Name="PTT", depend="PEI",
            SVM_cost=100,gamma=10,
            model=i,reshuffle=2,methods="RM.G")
print (i)
}
head(out$Prd)
head(out$Obs)


id.V<-c()
id.T<-c()

yNa<-out[[1]]
M<-out[[2]]
GENO<-out[[3]]

cor(out$Prd[,2],out$Obs[,2],use = "complete.obs")









library(MMGS)
library(data.table)
PTT_PTR<-read.table(file="C:/Users/z9809/Desktop/Maize_G2F_inbreed_benchmark/8Envs_envParas_DAP80.txt",header=T)
env_info<-read.table(file="C:/Users/z9809/Desktop/Maize_G2F_inbreed_benchmark/Env_meta_table.txt",sep="\t",header=T)
trait<-read.table(file="C:/Users/z9809/Desktop/Maize_G2F_inbreed_benchmark/Trait_records.txt",header=T)
geno<- fread('C:/Users/z9809/Desktop/Maize_G2F_inbreed_benchmark/Genotype.txt')
env_trait<-env_trait_calculate(data=trait,trait="PH",env="env_code")
LbyE<-LbyE_calculate(data=trait,trait="PH",env="env_code",line="line_code")
#LbyE<-na.omit(LbyE)
Paras<-c("DL","GDD","PTT","PTR","PTS")
pop_cor<-Exhaustive_search(data=env_trait, env_paras=PTT_PTR,
                           searching_daps=80,p=1, dap_x=80,dap_y=80,LOO=0,Paras=Paras)
dap1<-pop_cor[,2][which(abs(pop_cor[, -c(1:4)]) == max(abs(pop_cor[, -c(1:4)])), arr.ind = TRUE)][1]
dap2<-pop_cor[,3][which(abs(pop_cor[, -c(1:4)]) == max(abs(pop_cor[, -c(1:4)])), arr.ind = TRUE)][1]
dap1
dap2
envMeanPara<-envMeanPara(data=env_trait, env_paras=PTT_PTR, maxR_dap1=dap1,maxR_dap2=dap2, Paras=Paras)
cols<-which(abs(pop_cor[, -c(1:4)]) == max(abs(pop_cor[, -c(1:4)])), arr.ind = TRUE)[1,2]+4
Para<-gsub(".*_","", colnames(pop_cor)[cols[1]])
Para
pheno<-LbyE[which(as.character(LbyE$line_code)%in%c("line_code",as.character(geno$line_code))),]
geno<-geno[which(as.character(geno$line_code)%in%c("line_code",as.character(LbyE$line_code))),]
out<-MMGP(pheno=LbyE, geno=geno,
          env=env_info,para=envMeanPara,
          Para_Name=Para[1], depend="PEI",
          SVM_cost=100,gamma=10,
          model="BA",reshuffle=1,methods="RM.G")
out[[3]]
out[[4]]




#从头测试
library(devtools)
library(usethis)
library(MMGS)

data(trait)
data(geno)
data(env_info)
data("PTT_PTR")
env_trait<-env_trait_calculate(data=trait,trait="FTgdd",env="env_code")
LbyE<-LbyE_calculate(data=trait,trait="FTgdd",env="env_code",line="line_code")
LbyE_corrplot(LbyE=LbyE)
etl<-LbyE_Reshape(data=env_trait,env="env_code",LbyE=LbyE)
etl_plotter(data=etl,trait=env_trait)
Regression<-Reg(LbyE = LbyE, env_trait = env_trait)
Reg_plotter(Reg = Regression)
result<-line_trait_mean(data=trait,trait="FTgdd",mean=env_trait,LbyE=LbyE,row=2)
MSE<-result[[1]]
ltm<-result[[2]]
mse_plotter(MSE)
Mean_trait_plot(Regression,MSE)
Paras <- colnames(PTT_PTR)[-c(1:4)]
pop_cor<-Exhaustive_search(data=env_trait, env_paras=PTT_PTR, searching_daps=122,
                           p=1, dap_x=122,dap_y=122,LOO=0,Paras=Paras)
#全局变量.data
Exhaustive_plotter(Correlation=pop_cor,dap_x=122, dap_y=122,p=1,Paras=Paras)
envMeanPara<-envMeanPara(data=env_trait, env_paras=PTT_PTR, maxR_dap1=18,
                         maxR_dap2=43, Paras=Paras)
#全局变量.data
envMeanPara_plotter(data=envMeanPara,Paras=Paras)
#全局变量line_code Obs Env
